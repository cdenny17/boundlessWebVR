{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/objects/bow9.gltf","webpack:///./src/image/target.png","webpack:///./src/image/depot.png","webpack:///./src/image/albedo.png","webpack:///./src/image/bump.png","webpack:///./src/image/rough.png","webpack:///./src/scripts/three-xr.js","webpack:///./src/image/cubemap/px.png","webpack:///./src/image/cubemap/nx.png","webpack:///./src/image/cubemap/py.png","webpack:///./src/image/cubemap/ny.png","webpack:///./src/image/cubemap/pz.png","webpack:///./src/image/cubemap/nz.png","webpack:///./src/scripts/three-xr-main.js","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","gl","scene","camera","renderer","leftHand","rightHand","buttonListeners","buttonReleaseListeners","update","xrSession","xrReferenceSpace","leftButtonsDown","rightButtonsDown","rightPosition","leftPosition","checkForXRSupport","navigator","xr","supportsSession","onSessionStarted","session","requestReferenceSpace","then","referenceSpace","setupWebGLLayer","requestAnimationFrame","onDrawFrame","makeXRCompatible","updateRenderState","baseLayer","XRWebGLLayer","timestamp","xrFrame","glLayer","renderState","pose","getViewerPose","matrixAutoUpdate","autoClear","clear","setSize","framebufferWidth","framebufferHeight","bindFramebuffer","FRAMEBUFFER","framebuffer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","views","iterator","next","done","view","viewport","getViewport","renderEye","transform","inverse","matrix","projectionMatrix","err","return","inputSources","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","inputSource","inputPose","getPose","gripSpace","handedness","renderLeftHand","renderRightHand","gamepad","buttons","checkButtonsDownLeft","checkButtonsDownRight","len","buttonsDown","buttonsUp","pressed","handleButtonPress","handleButtonRelease","posMatrix","THREE","fromArray","position","copy","viewMatrixArray","setViewport","x","y","width","height","viewMatrix","matrixWorldInverse","updateMatrixWorld","render","clearDepth","setLeftHand","setRightHand","getRightHandPostion","getLeftHandPostion","start","_glCanvas","_scene","_camera","_renderer","getContext","xrCompatible","requestSession","catch","console","error","addButtonPressListener","hand","num","func","addButtonReleaseListener","setUpdate","_arr","_i5","button","_arr2","_i6","ThreeXr","require","degrees_to_radians","degrees","Math","PI","glCanvas","document","createElement","innerWidth","innerHeight","canvas","light","ambLight","backgroundTexture","load","background","cube","color","skyCube","map","side","texture","targetImg","albedoTexture","albedo","bumpTexture","bump","roughTexture","rough","floorMaterial","normalMap","roughnessMap","metalness","roughness","normalScale","wrapS","wrapT","repeat","set","getElementById","cubeBig","plane","z","rotateX","mesh","distance","triggerDownRight","arrowClone","add","GLTFLoader","bow","gltf","log","children","material","traverse","child","skinning","scale","stringBone","skeleton","bones","arrow","clone","xhr","concat","loaded","total","speed","rightHandReload","leftVector","rightVector","distanceTo","min","geometry","computeBoundingBox","box","boundingBox","applyMatrix4","matrixWorld","arrowBox","intersectsBox","supported","enterXrBtn","innerHTML","addEventListener","appendChild","e"],"mappings":"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","file":"js/app.7e93823e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([98,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"src/objects/bow9.gltf\";","module.exports = __webpack_public_path__ + \"src/image/target.png\";","module.exports = __webpack_public_path__ + \"src/image/depot.png\";","module.exports = __webpack_public_path__ + \"src/image/albedo.png\";","module.exports = __webpack_public_path__ + \"src/image/bump.png\";","module.exports = __webpack_public_path__ + \"src/image/rough.png\";","import * as THREE from 'three';\n\nlet glCanvas = null;\nlet gl = null;\nlet scene = null;\nlet camera = null;\nlet renderer = null;\nlet leftHand = null;\nlet rightHand = null;\nlet buttonListeners = [];\nlet buttonReleaseListeners = [];\nlet update = () => {};\nlet xrSession = null;\nlet xrReferenceSpace = null;\nlet leftButtonsDown = [];\nlet rightButtonsDown = [];\nlet rightPosition = null;\nlet leftPosition = null;\n\n/**\n * This checks for VR capable devices\n  */\nexport function checkForXRSupport() {\n    // Check to see if there is an XR device available that supports immersive VR\n    // presentation (for example: displaying in a headset). If the device has that\n    // capability the page will want to add an \"Enter VR\" button to the page (similar to\n    // a \"Fullscreen\" button) that starts the display of immersive VR content.\n\n    //just returns the promise for the user to call\n    return navigator.xr.supportsSession('immersive-vr');\n}\n\n/**\n * The user must have a glCanvas scene camera and renderer in place then the XR session will begin\n */\nfunction beginXRSession() {\n    // requestSession must be called within a user gesture event\n    // like click or touch when requesting an immersive session.\n    navigator.xr.requestSession('immersive-vr')\n        .then(onSessionStarted)\n        .catch(err => {\n            // May fail for a variety of reasons. Probably just want to\n            // render the scene normally without any tracking at this point.\n            window.requestAnimationFrame(onDrawFrame);\n        });\n}\n\n/**\n * \n * @param {XRSession} session https://www.w3.org/TR/webxr/#xrsession-interface\n * this starts rendering the scene and sets the reference space https://www.w3.org/TR/webxr/#xrreferencespace-interface\n */\nfunction onSessionStarted(session) {\n    // Store the session for use later.\n    xrSession = session;\n\n    xrSession.requestReferenceSpace('local')\n        .then((referenceSpace) => {\n            xrReferenceSpace = referenceSpace;\n        })\n        .then(setupWebGLLayer) // Create a compatible XRWebGLLayer\n        .then(() => {\n            // Start the render loop\n            xrSession.requestAnimationFrame(onDrawFrame);\n        });\n}\n\n\n\n\nfunction setupWebGLLayer() {\n    // Make sure the canvas context we want to use is compatible with the current xr device.\n    return gl.makeXRCompatible().then(() => {\n        // The content that will be shown on the device is defined by the session's\n        // baseLayer.\n        xrSession.updateRenderState({ baseLayer: new XRWebGLLayer(xrSession, gl) });\n    });\n}\n\nfunction onDrawFrame(timestamp, xrFrame) {\n    // Do we have an active session?\n    if (xrSession) {\n        let glLayer = xrSession.renderState.baseLayer;\n        let pose = xrFrame.getViewerPose(xrReferenceSpace);\n        if (pose) {\n            scene.matrixAutoUpdate = false;\n\n            if(leftHand) leftHand.matrixAutoUpdate = false;\n            if(rightHand) rightHand.matrixAutoUpdate = false;\n\n            renderer.autoClear = false;\n            renderer.clear();\n            renderer.setSize(glLayer.framebufferWidth, glLayer.framebufferHeight, false);\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, glLayer.framebuffer);\n\n            for (let view of pose.views) {\n                let viewport = glLayer.getViewport(view);\n                /**\n                 * Changed this line from:\n                 * renderEye(pose.transform.matrix, view.projectionMatrix, viewport);\n                 * \n                 * the matrix, a 4X4 array of the position and rotation of the camera position\n                 * was exactly inverted, the call view.transform.inverse.matrix not on the \"pose\" but\n                 * on the \"view\" is oriented correctly for the vive\n                 */\n                renderEye(view.transform.inverse.matrix, view.projectionMatrix, viewport);\n            }\n\n            let inputSources = xrSession.inputSources;\n\n            //will do nothing if there are no input sources connected\n            for (let inputSource of inputSources) {\n                //https://www.w3.org/TR/webxr/#xrframe-interface\n                let inputPose = xrFrame.getPose(inputSource.gripSpace, xrReferenceSpace);\n\n                if(!inputPose) continue;\n\n                //if the inputsource reports that it is the left hand\n                if(inputSource.handedness === \"left\") {\n                    renderLeftHand(inputPose.transform);\n                }\n\n                //if the input source reports that it is the right hand\n                if(inputSource.handedness === \"right\") {\n                    renderRightHand(inputPose.transform);\n                }\n            \n                //checks if there is a gamepad attached to the input source and that there are buttons\n                //follows spec for web gamepad interface: https://w3c.github.io/gamepad/#dom-gamepad\n                if(inputSource.gamepad && inputSource.gamepad.buttons.length > 0) {\n\n                    //get number of buttons on game pad\n                    let len = inputSource.gamepad.buttons.length;\n\n                    //loop through all connected buttons to check if they are pressed\n                    if(inputSource.handedness === 'left') {\n                        checkButtonsDownLeft(inputSource.gamepad.buttons);\n                    }\n\n                    if(inputSource.handedness === 'right'){\n                        checkButtonsDownRight(inputSource.gamepad.buttons);\n                    }\n                }\n            }\n        }\n\n        //call user's set update function\n        update();\n\n        // Request the next animation callback\n        xrSession.requestAnimationFrame(onDrawFrame);\n    } else {\n        // No session available, so render a default mono view.\n        //   gl.viewport(0, 0, glCanvas.width, glCanvas.height);\n        //   drawScene();\n\n        // Request the next window callback\n        window.requestAnimationFrame(onDrawFrame);\n    }\n}\n\n/**\n * this checks to see if a button is being held on the left controller and puts the number of the button into an array\n * it calls any event handlers if the state of the buttons has changed from one frame to the other\n * if the button is held down the continue portion holds the function until the release occurs\n */\nfunction checkButtonsDownLeft(buttons) {\n    let len = buttons.length;\n    let buttonsDown = [];\n    let buttonsUp = [];\n\n    for(let i = 0; i < len; ++i) {\n        if(buttons[i].pressed) {\n            buttonsDown.push(i);\n        } else {\n            buttonsUp.push(i);\n        }\n    }\n\n    for(let i = 0; i < buttonsDown.length; ++i){\n        //button is already down, so handler has already been called\n        if(leftButtonsDown[buttonsDown[i]]) {\n            continue;\n        } else {\n            handleButtonPress('left', buttonsDown[i]);\n            leftButtonsDown[buttonsDown[i]] = true;\n        }\n    }\n\n    for(let i = 0; i < buttonsUp.length; ++i) {\n        if(leftButtonsDown[buttonsUp[i]]) {\n            handleButtonRelease('left', buttonsUp[i]);\n            leftButtonsDown[buttonsUp[i]] = false;\n        } else {\n            continue;\n        }\n    }\n}\n\n/**\n * this checks to see if a button is being held on the righ controller and puts the number of the button into an array\n * it calls any event handlers if the state of the buttons has changed from one frame to the other\n * if the button is held down the continue portion holds the function until the release occurs\n */\nfunction checkButtonsDownRight(buttons) {\n    let len = buttons.length;\n    let buttonsDown = [];\n    let buttonsUp = [];\n\n    for(let i = 0; i < len; ++i) {\n        if(buttons[i].pressed) {\n            buttonsDown.push(i);\n        } else {\n            buttonsUp.push(i);\n        }\n    }\n\n    for(let i = 0; i < buttonsDown.length; ++i){\n        //button is already down, so handler has already been called\n        if(rightButtonsDown[buttonsDown[i]]) {\n            continue;\n        } else {\n            handleButtonPress('right', buttonsDown[i]);\n            rightButtonsDown[buttonsDown[i]] = true;\n        }\n    }\n\n    for(let i = 0; i < buttonsUp.length; ++i) {\n        if(rightButtonsDown[buttonsUp[i]]) {\n            handleButtonRelease('right', buttonsUp[i]);\n            rightButtonsDown[buttonsUp[i]] = false;\n        } else {\n            continue;\n        }\n    }\n}\n\n/**\n * \n * @param {XRTransform} transform https://www.w3.org/TR/webxr/#xrrigidtransform-interface\n * sets the position of the left hand object for example a 3d representation of a VR controller etc\n */\nfunction renderLeftHand(transform) {\n    if(!leftHand) return;\n\n    //creates matrix which contains position and rotation of object\n    let posMatrix = new THREE.Matrix4();\n\n    //sets threejs matrix from what is received from webxr api\n    posMatrix.fromArray(transform.matrix);\n\n    leftPosition = transform.position;\n\n    //updates position of object\n    leftHand.matrix.copy(posMatrix);\n}\n\n/**\n * \n * @param {XRTransform} transform https://www.w3.org/TR/webxr/#xrrigidtransform-interface\n * sets the position of the right hand object for example a 3d representation of a VR controller etc\n */\nfunction renderRightHand(transform) {\n    if(!rightHand) return;\n\n    let posMatrix = new THREE.Matrix4();\n    posMatrix.fromArray(transform.matrix);\n    rightPosition = transform.position;\n    rightHand.matrix.copy(posMatrix);\n    // console.log(rightHand);\n}\n\n\n/**\n * \n * @param {Float32Array} viewMatrixArray https://www.w3.org/TR/webxr/#xrrigidtransform-interface\n * @param {Float32Array} projectionMatrix https://www.w3.org/TR/webxr/#xrview-interface\n * @param {XRViewport} viewport https://www.w3.org/TR/webxr/#xrviewport-interface\n */\nfunction renderEye(viewMatrixArray, projectionMatrix, viewport) {\n    // Set the left or right eye half.\n    renderer.setViewport(viewport.x, viewport.y, viewport.width, viewport.height);\n\n    let viewMatrix = new THREE.Matrix4();\n\n    viewMatrix.fromArray(viewMatrixArray, 0);\n\n    // Update the scene and camera matrices.\n    camera.projectionMatrix.fromArray(projectionMatrix);\n    camera.matrixWorldInverse.copy(viewMatrix);\n    scene.matrix.copy(viewMatrix);\n\n    // Tell the scene to update (otherwise it will ignore the change of matrix).\n    scene.updateMatrixWorld(true);\n    renderer.render(scene, camera);\n    // Ensure that left eye calcs aren't going to interfere.\n    renderer.clearDepth();\n}\n\n/**\n * \n * @param {THREE.Object3D} object add the 3D object you wish to use as the left hand\n */\nexport function setLeftHand(object) {\n    leftHand = object;\n}\n\n/**\n * \n * @param {THREE.Object3D} object add the 3D object you wish to use as the right hand\n */\nexport function setRightHand(object) {\n    rightHand = object;\n}\n\nexport function getRightHandPostion() {\n    return rightPosition;\n}\n\nexport function getLeftHandPostion() {\n    return leftPosition;\n}\n/**\n * \n * @param {DOMCanvas} _glCanvas \n * @param {THREE.Scene} _scene \n * @param {THREE.Camera} _camera \n * @param {THREE.WebGLRenderer} _renderer \n * This initiallizes the render variables and starts rendering the XR scene\n */\nexport function start(_glCanvas, _scene, _camera, _renderer) {\n    if(!_glCanvas || !_scene || !_camera || !_renderer) {\n        console.error('Missing required parameter');\n        return;\n    }\n\n    glCanvas = _glCanvas;\n    scene = _scene;\n    camera = _camera;\n    renderer = _renderer;\n    \n    gl = glCanvas.getContext(\"webgl\", { xrCompatible: true });\n    beginXRSession();\n\n}\n\n/**\n * \n * @param {String} hand \"left\" or \"right\"\n * @param {Number} num index of button pressed\n * @param {Function} func function to be called on button press\n */\nexport function addButtonPressListener(hand, num, func) {\n    buttonListeners.push({hand: hand, num: num, func: func});\n}\n\n/**\n * \n * @param {String} hand \"left\" or \"right\"\n * @param {Number} num index of button released\n * @param {Function} func function to be called when button is released\n */\nexport function addButtonReleaseListener(hand, num, func) {\n    buttonReleaseListeners.push({hand: hand, num: num, func: func});\n}\n\n/**\n * \n * @param {Function} func optional function to be called every frame for animation etc\n */\nexport function setUpdate(func) {\n    update = func;\n}\n\nfunction handleButtonPress(hand, num) {\n    for(let button of buttonListeners) {\n        if(button.hand === hand && button.num === num) {\n            button.func();\n        }\n    }\n}\n\nfunction handleButtonRelease(hand, num) {\n    for(let button of buttonReleaseListeners) {\n        if(button.hand === hand && button.num === num) {\n            button.func();\n        }\n    }\n}\n","module.exports = __webpack_public_path__ + \"src/image/cubemap/px.png\";","module.exports = __webpack_public_path__ + \"src/image/cubemap/nx.png\";","module.exports = __webpack_public_path__ + \"src/image/cubemap/py.png\";","module.exports = __webpack_public_path__ + \"src/image/cubemap/ny.png\";","module.exports = __webpack_public_path__ + \"src/image/cubemap/pz.png\";","module.exports = __webpack_public_path__ + \"src/image/cubemap/nz.png\";","const ThreeXr = require('./three-xr.js');\n\nexport default ThreeXr;","import '../styles/index.scss';\r\nimport * as THREE from 'three';\r\nimport ThreeXr from './three-xr-main';\r\nimport bow from '../objects/bow9.gltf';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport targetImg from '../image/target.png';\r\nimport px from '../image/cubemap/px.png';\r\nimport nx from '../image/cubemap/nx.png';\r\nimport py from '../image/cubemap/py.png';\r\nimport ny from '../image/cubemap/ny.png';\r\nimport pz from '../image/cubemap/pz.png';\r\nimport nz from '../image/cubemap/nz.png';\r\nimport background from '../image/depot.png';\r\nimport albedo from '../image/albedo.png';\r\nimport bump from '../image/bump.png';\r\nimport rough from '../image/rough.png';\r\nimport { TetrahedronGeometry } from 'three';\r\n\r\nfunction degrees_to_radians(degrees) {\r\n  var pi = Math.PI;\r\n  return degrees * (pi/180);\r\n}\r\n\r\nlet glCanvas = document.createElement(\"canvas\");\r\nvar scene = new THREE.Scene();\r\n// let cubeTexture = new THREE.CubeTextureLoader()\r\n// \t.load( [\r\n// \t\tpx,\r\n// \t\tnx,\r\n// \t\tpy,\r\n// \t\tny,\r\n// \t\tpz,\r\n// \t\tnz\r\n// \t] );\r\nvar camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\nvar renderer = new THREE.WebGLRenderer({ canvas: glCanvas });\r\nvar light = new THREE.DirectionalLight(0xffffff, 1);\r\nvar ambLight = new THREE.AmbientLight(0xaaaaaa);\r\nvar backgroundTexture = new THREE.TextureLoader().load(background);\r\nvar cube = new THREE.Mesh(new THREE.CubeGeometry(0.3, 0.3, 0.3), new THREE.MeshLambertMaterial({color: new THREE.Color(0xffffff)}));\r\nvar skyCube = new THREE.Mesh(new THREE.SphereBufferGeometry(50, 50, 50), new THREE.MeshBasicMaterial({map:backgroundTexture, side:THREE.DoubleSide} ) );\r\nvar texture = new THREE.TextureLoader().load( targetImg );\r\nvar albedoTexture = new THREE.TextureLoader().load( albedo );\r\nvar bumpTexture = new THREE.TextureLoader().load( bump );\r\nvar roughTexture = new THREE.TextureLoader().load( rough );\r\nvar floorMaterial = new THREE.MeshStandardMaterial({\r\n    map: albedoTexture, \r\n    normalMap: bumpTexture, \r\n    roughnessMap: roughTexture, \r\n    metalness: 0.5,\r\n    roughness: 1,\r\n    normalScale: new THREE.Vector2(3,3)\r\n});\r\nfloorMaterial.map.wrapS = THREE.RepeatWrapping;\r\nfloorMaterial.map.wrapT = THREE.RepeatWrapping;\r\nfloorMaterial.map.repeat.set( 4, 2 );\r\nfloorMaterial.normalMap.wrapS = THREE.RepeatWrapping;\r\nfloorMaterial.normalMap.wrapT = THREE.RepeatWrapping;\r\nfloorMaterial.normalMap.repeat.set( 2, 2 );\r\n\r\nfloorMaterial.roughnessMap.wrapS = THREE.RepeatWrapping;\r\nfloorMaterial.roughnessMap.wrapT = THREE.RepeatWrapping;\r\nfloorMaterial.roughnessMap.repeat.set( 4, 2 );\r\n\r\nvar targ = document.getElementById('targ');\r\nvar cubeBig = new THREE.Mesh(new THREE.CubeGeometry(0.5, 0.5, 0.5), new THREE.MeshBasicMaterial({color: new THREE.Color(0xffffff), map: texture}));\r\n\r\nvar plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(10,10,10,10), floorMaterial);\r\nplane.position.y = -1.5;\r\nplane.position.z = 0;\r\nplane.rotateX(degrees_to_radians(-90));\r\ncube.position.y = 0;\r\ncube.position.z = -3;\r\ncubeBig.position.y = 0;\r\ncubeBig.position.z = -3;\r\nvar distance = 0;\r\nvar leftHand = null;\r\nvar rightHand = null;\r\nvar triggerDownRight = false;\r\nvar arrowClone = null;\r\nvar arrowCloneOrigin = 0;\r\n\r\n\r\n\r\n\r\n// add the object to the scene\r\nscene.add(cube);\r\nscene.add(cubeBig);\r\nscene.add(plane);\r\nscene.add(light);\r\nscene.add(ambLight);\r\nscene.add(skyCube);\r\nvar loader = new GLTFLoader();\r\nloader.load(bow, handle_load,\r\n( xhr ) => {\r\n    // called while loading is progressing\r\n    console.log( `${( xhr.loaded / xhr.total * 100 )}% loaded` );\r\n},\r\n( error ) => {\r\n    // called when loading has errors\r\n    console.error( 'An error happened', error );\r\n});\r\n\r\nvar mesh;\r\n// var mixer;\r\n\r\n\r\n\r\nvar stringBone = null;\r\n\r\nfunction handle_load(gltf) {\r\n    console.log(gltf);\r\n    mesh = gltf.scene.children[1];\r\n    mesh.material = new THREE.MeshLambertMaterial({color: new THREE.Color(0xbbbbbb)});\r\n    mesh.material.side = THREE.DoubleSide;\r\n    mesh.traverse(child => {        \r\n            child.material = new THREE.MeshLambertMaterial({color: new THREE.Color(0x5e3c1e), skinning: true});\r\n    });\r\n\r\n    \r\n\r\n    mesh.rotateX(degrees_to_radians(90));\r\n    mesh.scale.x = 0.5;\r\n    mesh.scale.y = 0.5;\r\n    mesh.scale.z = 0.5;\r\n\r\n    stringBone = mesh.children[1].children[0].skeleton.bones[17];\r\n    \r\n\r\n    leftHand = new THREE.Group();\r\n    leftHand.add(mesh);\r\n\r\n    scene.add(leftHand);\r\n    ThreeXr.setLeftHand(leftHand);\r\n\r\n    var arrow = gltf.scene.children[1];\r\n    arrow.material = new THREE.MeshLambertMaterial({color: new THREE.Color(0x5e3c1e)});\r\n    let scale = 0.1;\r\n    arrow.scale.y = scale;\r\n    arrow.scale.z = scale;\r\n    arrow.scale.x = scale;\r\n    arrow.rotateX(degrees_to_radians(180));\r\n    arrow.position.z = -0.25;\r\n   \r\n    arrowClone = arrow.clone();\r\n    arrowClone.rotateX(degrees_to_radians(-90));\r\n    arrowClone.position.y -= 0.23;\r\n    arrowClone.position.z += 0.25;\r\n    arrowCloneOrigin = arrowClone.position.y;\r\n\r\n    \r\n    rightHand = new THREE.Group();\r\n    rightHand.add(arrow);\r\n\r\n    scene.add(rightHand);\r\n    ThreeXr.setRightHand(rightHand);\r\n\r\n\r\n}\r\n\r\nThreeXr.addButtonPressListener(\"right\", 0, function() {\r\n    console.log(\"right handle buttons squeezed\");\r\n    triggerDownRight = true;\r\n});\r\n\r\nThreeXr.addButtonReleaseListener(\"right\", 0, function() {\r\n    triggerDownRight = false;\r\n    ThreeXr.setRightHand(null);\r\n    rightHand.children[0].speed = distance/2;\r\n   stringBone.position.y = -1.4162278175354004;\r\n   var rightHandReload = rightHand.clone();\r\n   scene.add(rightHandReload);\r\n   rightHand = rightHandReload;\r\n   ThreeXr.setRightHand(rightHand);\r\n});\r\n\r\n\r\nThreeXr.setUpdate(() => {\r\n    \r\n\r\n    var leftPosition = ThreeXr.getLeftHandPostion();\r\n    var rightPosition = ThreeXr.getRightHandPostion();\r\n    \r\n\r\n\r\n\r\n    if(leftPosition && rightPosition) {\r\n        var leftVector = new THREE.Vector3(leftPosition.x, leftPosition.y, leftPosition.z);\r\n        var rightVector = new THREE.Vector3(rightPosition.x, rightPosition.y, rightPosition.z);\r\n        distance = leftVector.distanceTo(rightVector);\r\n\r\n        if(stringBone && triggerDownRight) {\r\n            stringBone.position.y = Math.min(distance * -12, -1.4162278175354004);\r\n\r\n            \r\n            // arrowClone.position.y = arrowCloneOrigin + arrowDistance;\r\n            // console.log(stringBone);\r\n        }\r\n    }\r\n\r\n    //This sets a boinding box for the cube so that the arrow has something to intersect\r\n    cube.geometry.computeBoundingBox();\r\n    var box = cube.geometry.boundingBox.clone();\r\n    cube.updateMatrixWorld(true);\r\n    box.copy(cube.geometry.boundingBox).applyMatrix4(cube.matrixWorld);\r\n//iterates over every object in the scene to check if the child has speed then moves it forward\r\n    scene.traverse(child => {\r\n        if (child.speed) {\r\n            child.position.z -= child.speed;\r\n            //creates a bounding box for the moving child\r\n            child.geometry.computeBoundingBox();\r\n            var arrowBox = child.geometry.boundingBox.clone();\r\n            child.updateMatrixWorld( true );\r\n            arrowBox.copy( child.geometry.boundingBox ).applyMatrix4( child.matrixWorld );\r\n\r\n//check to see if bounding boxes have intersected then change speed to 0 stops item\r\n            if (arrowBox.intersectsBox(box)) {\r\n                console.log(\"intersection\");\r\n                child.speed = 0;\r\n            }\r\n        }\r\n    });\r\n\r\n});\r\n\r\nThreeXr.checkForXRSupport().then(supported => {\r\n    var enterXrBtn = document.createElement(\"button\");\r\n    enterXrBtn.innerHTML = \"Enter VR\";\r\n    enterXrBtn.addEventListener(\"click\", () => {\r\n        ThreeXr.start(glCanvas, scene, camera, renderer);\r\n        \r\n        \r\n    });\r\n    document.getElementById('header').appendChild(enterXrBtn);\r\n}).catch(e => {\r\n    console.error(e);\r\n});\r\n\r\n"],"sourceRoot":""}